# docker-compose.yaml
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
# compose 版本号
version: '2'
# 数据卷映射, 本地 -> docker镜像
volumes:
  orderer.crowd.com:
  ca.orgreq.crowd.com:
  peer0.orgreq.crowd.com:
  peer1.orgreq.crowd.com:
  peer0.orgwork.crowd.com:
  peer1.orgwork.crowd.com:
  
  # peer0.orgvalid.crowd.com:
  # peer1.orgvalid.crowd.com:
  # peer2.orgvalid.crowd.com:
  # peer3.orgvalid.crowd.com:
  # peer4.orgvalid.crowd.com:


networks: # 指定容器运行的网络, 同一网络中的容器才能相互通信
  crowdNet:

services:
  orderer.crowd.com:  # 定义的第1个服务名
    extends:          # 继承自当前yaml文件或者其它文件中定义的服务
      file:   base/docker-compose-base.yaml
      # 要继承上述file文件中对应的名字叫做 macOS.crowd.com 的服务
      service: orderer.crowd.com
    container_name: orderer.crowd.com  # 容器名称, 可以自定义
    networks: # 指定容器启动后运行的网络名
      - crowdNet

  ca.orgreq.crowd.com:
    extends:
      file: base/docker-compose-base.yaml
      service: ca.orgreq.crowd.com
    container_name: ca.orgreq.crowd.com
    networks: 
      - crowdNet

  # ca.orgwork.crowd.com:
  #   extends:
  #     file: base/docker-compose-base.yaml
  #     service: ca.orgwork.crowd.com
  #   container_name: ca.orgwork.crowd.com
  #   networks:
  #     - crowdNet
  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      - crowdNet

  peer0.orgreq.crowd.com: # 定义的第2个服务名
    container_name: peer0.orgreq.crowd.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.orgreq.crowd.com
    depends_on:
      - couchdb0
    networks:
      - crowdNet

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - "6984:5984"
    networks:
      - crowdNet

  peer1.orgreq.crowd.com: # 定义的第3个服务名
    container_name: peer1.orgreq.crowd.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.orgreq.crowd.com
    depends_on:
      - couchdb1
    networks:
      - crowdNet

  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - "7984:5984"
    networks:
      - crowdNet

  peer0.orgwork.crowd.com:  # 定义的第4个服务名
    container_name: peer0.orgwork.crowd.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.orgwork.crowd.com
    depends_on:
      - couchdb2
    networks:
      - crowdNet
  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - "8984:5984"
    networks:
      - crowdNet
  peer1.orgwork.crowd.com:  # 定义的第5个服务名
    container_name: peer1.orgwork.crowd.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.orgwork.crowd.com
    depends_on:
      - couchdb3
    networks:
      - crowdNet

  # peer0.orgvalid.crowd.com:  # 定义的第6个服务名
  #   container_name: peer0.orgvalid.crowd.com
  #   extends:
  #     file:  base/docker-compose-base.yaml
  #     service: peer0.orgvalid.crowd.com
  #   networks:
  #     - crowdNet

  # peer1.orgvalid.crowd.com:  # 定义的第7个服务名
  #   container_name: peer1.orgvalid.crowd.com
  #   extends:
  #     file:  base/docker-compose-base.yaml
  #     service: peer1.orgvalid.crowd.com
  #   networks:
  #     - crowdNet

  # peer2.orgvalid.crowd.com:  # 定义的第8个服务名
  #   container_name: peer2.orgvalid.crowd.com
  #   extends:
  #     file:  base/docker-compose-base.yaml
  #     service: peer2.orgvalid.crowd.com
  #   networks:
  #     - crowdNet

  # peer3.orgvalid.crowd.com:  # 定义的第9个服务名
  #   container_name: peer3.orgvalid.crowd.com
  #   extends:
  #     file:  base/docker-compose-base.yaml
  #     service: peer3.orgvalid.crowd.com
  #   networks:
  #     - crowdNet

  # peer4.orgvalid.crowd.com:  # 定义的第10个服务名
  #   container_name: peer4.orgvalid.crowd.com
  #   extends:
  #     file:  base/docker-compose-base.yaml
  #     service: peer4.orgvalid.crowd.com
  #   networks:
  #     - crowdNet


  cli:   # 定义的第11个服务名
    container_name: cli
    image: hyperledger/fabric-tools:latest  # 指定服务的镜像名称或镜像 ID
    tty: true
    stdin_open: true
    environment:  # 环境变量设置
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      # - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.orgreq.crowd.com:7051
      - CORE_PEER_LOCALMSPID=OrgReqMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgreq.crowd.com/peers/peer0.orgreq.crowd.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgreq.crowd.com/peers/peer0.orgreq.crowd.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgreq.crowd.com/peers/peer0.orgreq.crowd.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgreq.crowd.com/users/Admin@orgreq.crowd.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer   # 工作目录
    command: /bin/bash  # 容器启动后执行的命令
    volumes:  # 本地数据卷内容挂载到容器, 挂载到容器中的数据是只读的
        - /var/run/:/host/var/run/
        - ../chaincode/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on: # 指定了容器的启动顺序, 下边5个服务全部启动之后, 启动cli服务
      - orderer.crowd.com         # 定义的服务器名1
      - ca.orgreq.crowd.com
      # - ca.orgwork.crowd.com
      - peer0.orgreq.crowd.com    # 定义的服务器名2
      - peer1.orgreq.crowd.com    # 定义的服务器名3
      - peer0.orgwork.crowd.com   # 定义的服务器名4
      - peer1.orgwork.crowd.com   # 定义的服务器名5
      # - peer0.orgvalid.crowd.com
      # - peer1.orgvalid.crowd.com
      # - peer2.orgvalid.crowd.com
      # - peer3.orgvalid.crowd.com
      # - peer4.orgvalid.crowd.com
    networks:
      - crowdNet